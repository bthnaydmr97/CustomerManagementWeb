//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CustomerManagementWeb.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class ProductDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockQuantity {
            get {
                return this.StockQuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.StockQuantityField, value) != true)) {
                    this.StockQuantityField = value;
                    this.RaisePropertyChanged("StockQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class CategoryDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryDescription {
            get {
                return this.CategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryDescriptionField, value) != true)) {
                    this.CategoryDescriptionField = value;
                    this.RaisePropertyChanged("CategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/Facade")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryDescription {
            get {
                return this.CategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryDescriptionField, value) != true)) {
                    this.CategoryDescriptionField = value;
                    this.RaisePropertyChanged("CategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class CustomerDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Facade")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class OrderDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((this.PaymentIdField.Equals(value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeField, value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class PaymentDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeField, value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILogin")]
    public interface ILogin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/CheckLogin", ReplyAction="http://tempuri.org/ILogin/CheckLoginResponse")]
        bool CheckLogin(string pass, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/CheckLogin", ReplyAction="http://tempuri.org/ILogin/CheckLoginResponse")]
        System.Threading.Tasks.Task<bool> CheckLoginAsync(string pass, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginChannel : CustomerManagementWeb.ServiceReference1.ILogin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginClient : System.ServiceModel.ClientBase<CustomerManagementWeb.ServiceReference1.ILogin>, CustomerManagementWeb.ServiceReference1.ILogin {
        
        public LoginClient() {
        }
        
        public LoginClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckLogin(string pass, string username) {
            return base.Channel.CheckLogin(pass, username);
        }
        
        public System.Threading.Tasks.Task<bool> CheckLoginAsync(string pass, string username) {
            return base.Channel.CheckLoginAsync(pass, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IProduct")]
    public interface IProduct {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProduct", ReplyAction="http://tempuri.org/IProduct/GetProductResponse")]
        CustomerManagementWeb.ServiceReference1.ProductDto[] GetProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProduct", ReplyAction="http://tempuri.org/IProduct/GetProductResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.ProductDto[]> GetProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProductById", ReplyAction="http://tempuri.org/IProduct/GetProductByIdResponse")]
        CustomerManagementWeb.ServiceReference1.ProductDto GetProductById(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProductById", ReplyAction="http://tempuri.org/IProduct/GetProductByIdResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.ProductDto> GetProductByIdAsync(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/CreateProduct", ReplyAction="http://tempuri.org/IProduct/CreateProductResponse")]
        System.Collections.Generic.KeyValuePair<bool, string> CreateProduct(CustomerManagementWeb.ServiceReference1.ProductDto prodct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/CreateProduct", ReplyAction="http://tempuri.org/IProduct/CreateProductResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> CreateProductAsync(CustomerManagementWeb.ServiceReference1.ProductDto prodct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/UpdateProduct", ReplyAction="http://tempuri.org/IProduct/UpdateProductResponse")]
        System.Collections.Generic.KeyValuePair<bool, string> UpdateProduct(CustomerManagementWeb.ServiceReference1.ProductDto productDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/UpdateProduct", ReplyAction="http://tempuri.org/IProduct/UpdateProductResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> UpdateProductAsync(CustomerManagementWeb.ServiceReference1.ProductDto productDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/DeleteProduct", ReplyAction="http://tempuri.org/IProduct/DeleteProductResponse")]
        System.Collections.Generic.KeyValuePair<bool, string> DeleteProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/DeleteProduct", ReplyAction="http://tempuri.org/IProduct/DeleteProductResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> DeleteProductAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductChannel : CustomerManagementWeb.ServiceReference1.IProduct, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductClient : System.ServiceModel.ClientBase<CustomerManagementWeb.ServiceReference1.IProduct>, CustomerManagementWeb.ServiceReference1.IProduct {
        
        public ProductClient() {
        }
        
        public ProductClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CustomerManagementWeb.ServiceReference1.ProductDto[] GetProduct() {
            return base.Channel.GetProduct();
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.ProductDto[]> GetProductAsync() {
            return base.Channel.GetProductAsync();
        }
        
        public CustomerManagementWeb.ServiceReference1.ProductDto GetProductById(int productid) {
            return base.Channel.GetProductById(productid);
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.ProductDto> GetProductByIdAsync(int productid) {
            return base.Channel.GetProductByIdAsync(productid);
        }
        
        public System.Collections.Generic.KeyValuePair<bool, string> CreateProduct(CustomerManagementWeb.ServiceReference1.ProductDto prodct) {
            return base.Channel.CreateProduct(prodct);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> CreateProductAsync(CustomerManagementWeb.ServiceReference1.ProductDto prodct) {
            return base.Channel.CreateProductAsync(prodct);
        }
        
        public System.Collections.Generic.KeyValuePair<bool, string> UpdateProduct(CustomerManagementWeb.ServiceReference1.ProductDto productDto) {
            return base.Channel.UpdateProduct(productDto);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> UpdateProductAsync(CustomerManagementWeb.ServiceReference1.ProductDto productDto) {
            return base.Channel.UpdateProductAsync(productDto);
        }
        
        public System.Collections.Generic.KeyValuePair<bool, string> DeleteProduct(int id) {
            return base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICategory")]
    public interface ICategory {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategroy", ReplyAction="http://tempuri.org/ICategory/GetCategroyResponse")]
        CustomerManagementWeb.ServiceReference1.CategoryDto[] GetCategroy();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategroy", ReplyAction="http://tempuri.org/ICategory/GetCategroyResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CategoryDto[]> GetCategroyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategoryById", ReplyAction="http://tempuri.org/ICategory/GetCategoryByIdResponse")]
        CustomerManagementWeb.ServiceReference1.CategoryDto GetCategoryById(int categoryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategoryById", ReplyAction="http://tempuri.org/ICategory/GetCategoryByIdResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CategoryDto> GetCategoryByIdAsync(int categoryid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/CreateCategory", ReplyAction="http://tempuri.org/ICategory/CreateCategoryResponse")]
        CustomerManagementWeb.ServiceReference1.Category CreateCategory(CustomerManagementWeb.ServiceReference1.CategoryDto ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/CreateCategory", ReplyAction="http://tempuri.org/ICategory/CreateCategoryResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.Category> CreateCategoryAsync(CustomerManagementWeb.ServiceReference1.CategoryDto ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/UpdateCategory", ReplyAction="http://tempuri.org/ICategory/UpdateCategoryResponse")]
        System.Collections.Generic.KeyValuePair<bool, string> UpdateCategory(CustomerManagementWeb.ServiceReference1.CategoryDto categoryDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/UpdateCategory", ReplyAction="http://tempuri.org/ICategory/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> UpdateCategoryAsync(CustomerManagementWeb.ServiceReference1.CategoryDto categoryDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/DeleteCategory", ReplyAction="http://tempuri.org/ICategory/DeleteCategoryResponse")]
        System.Collections.Generic.KeyValuePair<bool, string> DeleteCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/DeleteCategory", ReplyAction="http://tempuri.org/ICategory/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> DeleteCategoryAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICategoryChannel : CustomerManagementWeb.ServiceReference1.ICategory, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryClient : System.ServiceModel.ClientBase<CustomerManagementWeb.ServiceReference1.ICategory>, CustomerManagementWeb.ServiceReference1.ICategory {
        
        public CategoryClient() {
        }
        
        public CategoryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CustomerManagementWeb.ServiceReference1.CategoryDto[] GetCategroy() {
            return base.Channel.GetCategroy();
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CategoryDto[]> GetCategroyAsync() {
            return base.Channel.GetCategroyAsync();
        }
        
        public CustomerManagementWeb.ServiceReference1.CategoryDto GetCategoryById(int categoryid) {
            return base.Channel.GetCategoryById(categoryid);
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CategoryDto> GetCategoryByIdAsync(int categoryid) {
            return base.Channel.GetCategoryByIdAsync(categoryid);
        }
        
        public CustomerManagementWeb.ServiceReference1.Category CreateCategory(CustomerManagementWeb.ServiceReference1.CategoryDto ct) {
            return base.Channel.CreateCategory(ct);
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.Category> CreateCategoryAsync(CustomerManagementWeb.ServiceReference1.CategoryDto ct) {
            return base.Channel.CreateCategoryAsync(ct);
        }
        
        public System.Collections.Generic.KeyValuePair<bool, string> UpdateCategory(CustomerManagementWeb.ServiceReference1.CategoryDto categoryDto) {
            return base.Channel.UpdateCategory(categoryDto);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> UpdateCategoryAsync(CustomerManagementWeb.ServiceReference1.CategoryDto categoryDto) {
            return base.Channel.UpdateCategoryAsync(categoryDto);
        }
        
        public System.Collections.Generic.KeyValuePair<bool, string> DeleteCategory(int id) {
            return base.Channel.DeleteCategory(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> DeleteCategoryAsync(int id) {
            return base.Channel.DeleteCategoryAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICustomer")]
    public interface ICustomer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetCustomer", ReplyAction="http://tempuri.org/ICustomer/GetCustomerResponse")]
        CustomerManagementWeb.ServiceReference1.CustomerDto[] GetCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetCustomer", ReplyAction="http://tempuri.org/ICustomer/GetCustomerResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CustomerDto[]> GetCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetCustomerById", ReplyAction="http://tempuri.org/ICustomer/GetCustomerByIdResponse")]
        CustomerManagementWeb.ServiceReference1.CustomerDto GetCustomerById(int customerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetCustomerById", ReplyAction="http://tempuri.org/ICustomer/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CustomerDto> GetCustomerByIdAsync(int customerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/CreateCustomer", ReplyAction="http://tempuri.org/ICustomer/CreateCustomerResponse")]
        CustomerManagementWeb.ServiceReference1.Customer CreateCustomer(CustomerManagementWeb.ServiceReference1.CustomerDto cstmr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/CreateCustomer", ReplyAction="http://tempuri.org/ICustomer/CreateCustomerResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.Customer> CreateCustomerAsync(CustomerManagementWeb.ServiceReference1.CustomerDto cstmr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomer/UpdateCustomerResponse")]
        System.Collections.Generic.KeyValuePair<bool, string> UpdateCustomer(CustomerManagementWeb.ServiceReference1.CustomerDto customerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomer/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> UpdateCustomerAsync(CustomerManagementWeb.ServiceReference1.CustomerDto customerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomer/DeleteCustomerResponse")]
        System.Collections.Generic.KeyValuePair<bool, string> DeleteCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomer/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> DeleteCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetOrderHistoryById", ReplyAction="http://tempuri.org/ICustomer/GetOrderHistoryByIdResponse")]
        CustomerManagementWeb.ServiceReference1.CustomerDto GetOrderHistoryById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetOrderHistoryById", ReplyAction="http://tempuri.org/ICustomer/GetOrderHistoryByIdResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CustomerDto> GetOrderHistoryByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerChannel : CustomerManagementWeb.ServiceReference1.ICustomer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerClient : System.ServiceModel.ClientBase<CustomerManagementWeb.ServiceReference1.ICustomer>, CustomerManagementWeb.ServiceReference1.ICustomer {
        
        public CustomerClient() {
        }
        
        public CustomerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CustomerManagementWeb.ServiceReference1.CustomerDto[] GetCustomer() {
            return base.Channel.GetCustomer();
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CustomerDto[]> GetCustomerAsync() {
            return base.Channel.GetCustomerAsync();
        }
        
        public CustomerManagementWeb.ServiceReference1.CustomerDto GetCustomerById(int customerid) {
            return base.Channel.GetCustomerById(customerid);
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CustomerDto> GetCustomerByIdAsync(int customerid) {
            return base.Channel.GetCustomerByIdAsync(customerid);
        }
        
        public CustomerManagementWeb.ServiceReference1.Customer CreateCustomer(CustomerManagementWeb.ServiceReference1.CustomerDto cstmr) {
            return base.Channel.CreateCustomer(cstmr);
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.Customer> CreateCustomerAsync(CustomerManagementWeb.ServiceReference1.CustomerDto cstmr) {
            return base.Channel.CreateCustomerAsync(cstmr);
        }
        
        public System.Collections.Generic.KeyValuePair<bool, string> UpdateCustomer(CustomerManagementWeb.ServiceReference1.CustomerDto customerDto) {
            return base.Channel.UpdateCustomer(customerDto);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> UpdateCustomerAsync(CustomerManagementWeb.ServiceReference1.CustomerDto customerDto) {
            return base.Channel.UpdateCustomerAsync(customerDto);
        }
        
        public System.Collections.Generic.KeyValuePair<bool, string> DeleteCustomer(int id) {
            return base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> DeleteCustomerAsync(int id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public CustomerManagementWeb.ServiceReference1.CustomerDto GetOrderHistoryById(int id) {
            return base.Channel.GetOrderHistoryById(id);
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.CustomerDto> GetOrderHistoryByIdAsync(int id) {
            return base.Channel.GetOrderHistoryByIdAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IOrder")]
    public interface IOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/GetOrder", ReplyAction="http://tempuri.org/IOrder/GetOrderResponse")]
        CustomerManagementWeb.ServiceReference1.OrderDto[] GetOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/GetOrder", ReplyAction="http://tempuri.org/IOrder/GetOrderResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.OrderDto[]> GetOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/GetOrderById", ReplyAction="http://tempuri.org/IOrder/GetOrderByIdResponse")]
        CustomerManagementWeb.ServiceReference1.OrderDto GetOrderById(int orderid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/GetOrderById", ReplyAction="http://tempuri.org/IOrder/GetOrderByIdResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.OrderDto> GetOrderByIdAsync(int orderid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/CreateOrder", ReplyAction="http://tempuri.org/IOrder/CreateOrderResponse")]
        System.Collections.Generic.KeyValuePair<bool, string> CreateOrder(CustomerManagementWeb.ServiceReference1.OrderDto order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/CreateOrder", ReplyAction="http://tempuri.org/IOrder/CreateOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> CreateOrderAsync(CustomerManagementWeb.ServiceReference1.OrderDto order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/DeleteOrder", ReplyAction="http://tempuri.org/IOrder/DeleteOrderResponse")]
        System.Collections.Generic.KeyValuePair<bool, string> DeleteOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/DeleteOrder", ReplyAction="http://tempuri.org/IOrder/DeleteOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> DeleteOrderAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderChannel : CustomerManagementWeb.ServiceReference1.IOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderClient : System.ServiceModel.ClientBase<CustomerManagementWeb.ServiceReference1.IOrder>, CustomerManagementWeb.ServiceReference1.IOrder {
        
        public OrderClient() {
        }
        
        public OrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CustomerManagementWeb.ServiceReference1.OrderDto[] GetOrder() {
            return base.Channel.GetOrder();
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.OrderDto[]> GetOrderAsync() {
            return base.Channel.GetOrderAsync();
        }
        
        public CustomerManagementWeb.ServiceReference1.OrderDto GetOrderById(int orderid) {
            return base.Channel.GetOrderById(orderid);
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.OrderDto> GetOrderByIdAsync(int orderid) {
            return base.Channel.GetOrderByIdAsync(orderid);
        }
        
        public System.Collections.Generic.KeyValuePair<bool, string> CreateOrder(CustomerManagementWeb.ServiceReference1.OrderDto order) {
            return base.Channel.CreateOrder(order);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> CreateOrderAsync(CustomerManagementWeb.ServiceReference1.OrderDto order) {
            return base.Channel.CreateOrderAsync(order);
        }
        
        public System.Collections.Generic.KeyValuePair<bool, string> DeleteOrder(int id) {
            return base.Channel.DeleteOrder(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<bool, string>> DeleteOrderAsync(int id) {
            return base.Channel.DeleteOrderAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPayment")]
    public interface IPayment {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayment/GetPayment", ReplyAction="http://tempuri.org/IPayment/GetPaymentResponse")]
        CustomerManagementWeb.ServiceReference1.PaymentDto[] GetPayment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayment/GetPayment", ReplyAction="http://tempuri.org/IPayment/GetPaymentResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.PaymentDto[]> GetPaymentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayment/GetPaymentById", ReplyAction="http://tempuri.org/IPayment/GetPaymentByIdResponse")]
        CustomerManagementWeb.ServiceReference1.PaymentDto GetPaymentById(int paymentid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayment/GetPaymentById", ReplyAction="http://tempuri.org/IPayment/GetPaymentByIdResponse")]
        System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.PaymentDto> GetPaymentByIdAsync(int paymentid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPaymentChannel : CustomerManagementWeb.ServiceReference1.IPayment, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaymentClient : System.ServiceModel.ClientBase<CustomerManagementWeb.ServiceReference1.IPayment>, CustomerManagementWeb.ServiceReference1.IPayment {
        
        public PaymentClient() {
        }
        
        public PaymentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaymentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CustomerManagementWeb.ServiceReference1.PaymentDto[] GetPayment() {
            return base.Channel.GetPayment();
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.PaymentDto[]> GetPaymentAsync() {
            return base.Channel.GetPaymentAsync();
        }
        
        public CustomerManagementWeb.ServiceReference1.PaymentDto GetPaymentById(int paymentid) {
            return base.Channel.GetPaymentById(paymentid);
        }
        
        public System.Threading.Tasks.Task<CustomerManagementWeb.ServiceReference1.PaymentDto> GetPaymentByIdAsync(int paymentid) {
            return base.Channel.GetPaymentByIdAsync(paymentid);
        }
    }
}
